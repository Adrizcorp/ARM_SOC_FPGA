#ifndef _ALTERA_HPSS_H_
#define _ALTERA_HPSS_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'soc_system' in
 * file '/cygdrive/d/FPGAs/DE0nanoSOC/HPS_CONTROL_FPGA_LED/soc_system.sopcinfo'.
 */

/*
 * This file contains macros for module 'hps_0' and devices
 * connected to the following masters:
 *   h2f_axi_master
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'audio_output_in_csr', class 'altera_avalon_fifo'
 * The macros are prefixed with 'AUDIO_OUTPUT_IN_CSR_'.
 * The prefix is the slave descriptor.
 */
#define AUDIO_OUTPUT_IN_CSR_COMPONENT_TYPE altera_avalon_fifo
#define AUDIO_OUTPUT_IN_CSR_COMPONENT_NAME audio_output
#define AUDIO_OUTPUT_IN_CSR_BASE 0x0
#define AUDIO_OUTPUT_IN_CSR_SPAN 32
#define AUDIO_OUTPUT_IN_CSR_END 0x1f
#define AUDIO_OUTPUT_IN_CSR_AVALONMM_AVALONMM_DATA_WIDTH 32
#define AUDIO_OUTPUT_IN_CSR_AVALONMM_AVALONST_DATA_WIDTH 32
#define AUDIO_OUTPUT_IN_CSR_BITS_PER_SYMBOL 16
#define AUDIO_OUTPUT_IN_CSR_CHANNEL_WIDTH 8
#define AUDIO_OUTPUT_IN_CSR_ERROR_WIDTH 8
#define AUDIO_OUTPUT_IN_CSR_FIFO_DEPTH 256
#define AUDIO_OUTPUT_IN_CSR_SINGLE_CLOCK_MODE 0
#define AUDIO_OUTPUT_IN_CSR_SYMBOLS_PER_BEAT 2
#define AUDIO_OUTPUT_IN_CSR_USE_AVALONMM_READ_SLAVE 1
#define AUDIO_OUTPUT_IN_CSR_USE_AVALONMM_WRITE_SLAVE 1
#define AUDIO_OUTPUT_IN_CSR_USE_AVALONST_SINK 0
#define AUDIO_OUTPUT_IN_CSR_USE_AVALONST_SOURCE 0
#define AUDIO_OUTPUT_IN_CSR_USE_BACKPRESSURE 1
#define AUDIO_OUTPUT_IN_CSR_USE_IRQ 0
#define AUDIO_OUTPUT_IN_CSR_USE_PACKET 1
#define AUDIO_OUTPUT_IN_CSR_USE_READ_CONTROL 0
#define AUDIO_OUTPUT_IN_CSR_USE_REGISTER 0
#define AUDIO_OUTPUT_IN_CSR_USE_WRITE_CONTROL 1

/*
 * Macros for device 'button_pio', class 'altera_avalon_pio'
 * The macros are prefixed with 'BUTTON_PIO_'.
 * The prefix is the slave descriptor.
 */
#define BUTTON_PIO_COMPONENT_TYPE altera_avalon_pio
#define BUTTON_PIO_COMPONENT_NAME button_pio
#define BUTTON_PIO_BASE 0x0
#define BUTTON_PIO_SPAN 32
#define BUTTON_PIO_END 0x1f
#define BUTTON_PIO_IRQ 1
#define BUTTON_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define BUTTON_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define BUTTON_PIO_CAPTURE 1
#define BUTTON_PIO_DATA_WIDTH 4
#define BUTTON_PIO_DO_TEST_BENCH_WIRING 0
#define BUTTON_PIO_DRIVEN_SIM_VALUE 0
#define BUTTON_PIO_EDGE_TYPE FALLING
#define BUTTON_PIO_FREQ 50000000
#define BUTTON_PIO_HAS_IN 1
#define BUTTON_PIO_HAS_OUT 0
#define BUTTON_PIO_HAS_TRI 0
#define BUTTON_PIO_IRQ_TYPE EDGE
#define BUTTON_PIO_RESET_VALUE 0

/*
 * Macros for device 'dipsw_pio', class 'altera_avalon_pio'
 * The macros are prefixed with 'DIPSW_PIO_'.
 * The prefix is the slave descriptor.
 */
#define DIPSW_PIO_COMPONENT_TYPE altera_avalon_pio
#define DIPSW_PIO_COMPONENT_NAME dipsw_pio
#define DIPSW_PIO_BASE 0x10
#define DIPSW_PIO_SPAN 32
#define DIPSW_PIO_END 0x2f
#define DIPSW_PIO_IRQ 0
#define DIPSW_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define DIPSW_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define DIPSW_PIO_CAPTURE 1
#define DIPSW_PIO_DATA_WIDTH 4
#define DIPSW_PIO_DO_TEST_BENCH_WIRING 0
#define DIPSW_PIO_DRIVEN_SIM_VALUE 0
#define DIPSW_PIO_EDGE_TYPE ANY
#define DIPSW_PIO_FREQ 50000000
#define DIPSW_PIO_HAS_IN 1
#define DIPSW_PIO_HAS_OUT 0
#define DIPSW_PIO_HAS_TRI 0
#define DIPSW_PIO_IRQ_TYPE EDGE
#define DIPSW_PIO_RESET_VALUE 0

/*
 * Macros for device 'audio_output_in', class 'altera_avalon_fifo'
 * The macros are prefixed with 'AUDIO_OUTPUT_IN_'.
 * The prefix is the slave descriptor.
 */
#define AUDIO_OUTPUT_IN_COMPONENT_TYPE altera_avalon_fifo
#define AUDIO_OUTPUT_IN_COMPONENT_NAME audio_output
#define AUDIO_OUTPUT_IN_BASE 0x20
#define AUDIO_OUTPUT_IN_SPAN 4
#define AUDIO_OUTPUT_IN_END 0x23
#define AUDIO_OUTPUT_IN_AVALONMM_AVALONMM_DATA_WIDTH 32
#define AUDIO_OUTPUT_IN_AVALONMM_AVALONST_DATA_WIDTH 32
#define AUDIO_OUTPUT_IN_BITS_PER_SYMBOL 16
#define AUDIO_OUTPUT_IN_CHANNEL_WIDTH 8
#define AUDIO_OUTPUT_IN_ERROR_WIDTH 8
#define AUDIO_OUTPUT_IN_FIFO_DEPTH 256
#define AUDIO_OUTPUT_IN_SINGLE_CLOCK_MODE 0
#define AUDIO_OUTPUT_IN_SYMBOLS_PER_BEAT 2
#define AUDIO_OUTPUT_IN_USE_AVALONMM_READ_SLAVE 1
#define AUDIO_OUTPUT_IN_USE_AVALONMM_WRITE_SLAVE 1
#define AUDIO_OUTPUT_IN_USE_AVALONST_SINK 0
#define AUDIO_OUTPUT_IN_USE_AVALONST_SOURCE 0
#define AUDIO_OUTPUT_IN_USE_BACKPRESSURE 1
#define AUDIO_OUTPUT_IN_USE_IRQ 0
#define AUDIO_OUTPUT_IN_USE_PACKET 1
#define AUDIO_OUTPUT_IN_USE_READ_CONTROL 0
#define AUDIO_OUTPUT_IN_USE_REGISTER 0
#define AUDIO_OUTPUT_IN_USE_WRITE_CONTROL 1

/*
 * Macros for device 'led_pio', class 'altera_avalon_pio'
 * The macros are prefixed with 'LED_PIO_'.
 * The prefix is the slave descriptor.
 */
#define LED_PIO_COMPONENT_TYPE altera_avalon_pio
#define LED_PIO_COMPONENT_NAME led_pio
#define LED_PIO_BASE 0x20
#define LED_PIO_SPAN 32
#define LED_PIO_END 0x3f
#define LED_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define LED_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define LED_PIO_CAPTURE 0
#define LED_PIO_DATA_WIDTH 8
#define LED_PIO_DO_TEST_BENCH_WIRING 0
#define LED_PIO_DRIVEN_SIM_VALUE 0
#define LED_PIO_EDGE_TYPE NONE
#define LED_PIO_FREQ 50000000
#define LED_PIO_HAS_IN 0
#define LED_PIO_HAS_OUT 1
#define LED_PIO_HAS_TRI 0
#define LED_PIO_IRQ_TYPE NONE
#define LED_PIO_RESET_VALUE 0

/*
 * Macros for device 'video_input_out', class 'altera_avalon_fifo'
 * The macros are prefixed with 'VIDEO_INPUT_OUT_'.
 * The prefix is the slave descriptor.
 */
#define VIDEO_INPUT_OUT_COMPONENT_TYPE altera_avalon_fifo
#define VIDEO_INPUT_OUT_COMPONENT_NAME video_input
#define VIDEO_INPUT_OUT_BASE 0x24
#define VIDEO_INPUT_OUT_SPAN 4
#define VIDEO_INPUT_OUT_END 0x27
#define VIDEO_INPUT_OUT_AVALONMM_AVALONMM_DATA_WIDTH 32
#define VIDEO_INPUT_OUT_AVALONMM_AVALONST_DATA_WIDTH 32
#define VIDEO_INPUT_OUT_BITS_PER_SYMBOL 16
#define VIDEO_INPUT_OUT_CHANNEL_WIDTH 8
#define VIDEO_INPUT_OUT_ERROR_WIDTH 8
#define VIDEO_INPUT_OUT_FIFO_DEPTH 8192
#define VIDEO_INPUT_OUT_SINGLE_CLOCK_MODE 0
#define VIDEO_INPUT_OUT_SYMBOLS_PER_BEAT 2
#define VIDEO_INPUT_OUT_USE_AVALONMM_READ_SLAVE 1
#define VIDEO_INPUT_OUT_USE_AVALONMM_WRITE_SLAVE 1
#define VIDEO_INPUT_OUT_USE_AVALONST_SINK 0
#define VIDEO_INPUT_OUT_USE_AVALONST_SOURCE 0
#define VIDEO_INPUT_OUT_USE_BACKPRESSURE 1
#define VIDEO_INPUT_OUT_USE_IRQ 0
#define VIDEO_INPUT_OUT_USE_PACKET 1
#define VIDEO_INPUT_OUT_USE_READ_CONTROL 1
#define VIDEO_INPUT_OUT_USE_REGISTER 0
#define VIDEO_INPUT_OUT_USE_WRITE_CONTROL 0

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * The macros are prefixed with 'SYSID_QSYS_'.
 * The prefix is the slave descriptor.
 */
#define SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define SYSID_QSYS_BASE 0x30
#define SYSID_QSYS_SPAN 8
#define SYSID_QSYS_END 0x37
#define SYSID_QSYS_ID 2899645186
#define SYSID_QSYS_TIMESTAMP 1471016684

/*
 * Macros for device 'video_input_out_csr', class 'altera_avalon_fifo'
 * The macros are prefixed with 'VIDEO_INPUT_OUT_CSR_'.
 * The prefix is the slave descriptor.
 */
#define VIDEO_INPUT_OUT_CSR_COMPONENT_TYPE altera_avalon_fifo
#define VIDEO_INPUT_OUT_CSR_COMPONENT_NAME video_input
#define VIDEO_INPUT_OUT_CSR_BASE 0x40
#define VIDEO_INPUT_OUT_CSR_SPAN 32
#define VIDEO_INPUT_OUT_CSR_END 0x5f
#define VIDEO_INPUT_OUT_CSR_AVALONMM_AVALONMM_DATA_WIDTH 32
#define VIDEO_INPUT_OUT_CSR_AVALONMM_AVALONST_DATA_WIDTH 32
#define VIDEO_INPUT_OUT_CSR_BITS_PER_SYMBOL 16
#define VIDEO_INPUT_OUT_CSR_CHANNEL_WIDTH 8
#define VIDEO_INPUT_OUT_CSR_ERROR_WIDTH 8
#define VIDEO_INPUT_OUT_CSR_FIFO_DEPTH 8192
#define VIDEO_INPUT_OUT_CSR_SINGLE_CLOCK_MODE 0
#define VIDEO_INPUT_OUT_CSR_SYMBOLS_PER_BEAT 2
#define VIDEO_INPUT_OUT_CSR_USE_AVALONMM_READ_SLAVE 1
#define VIDEO_INPUT_OUT_CSR_USE_AVALONMM_WRITE_SLAVE 1
#define VIDEO_INPUT_OUT_CSR_USE_AVALONST_SINK 0
#define VIDEO_INPUT_OUT_CSR_USE_AVALONST_SOURCE 0
#define VIDEO_INPUT_OUT_CSR_USE_BACKPRESSURE 1
#define VIDEO_INPUT_OUT_CSR_USE_IRQ 0
#define VIDEO_INPUT_OUT_CSR_USE_PACKET 1
#define VIDEO_INPUT_OUT_CSR_USE_READ_CONTROL 1
#define VIDEO_INPUT_OUT_CSR_USE_REGISTER 0
#define VIDEO_INPUT_OUT_CSR_USE_WRITE_CONTROL 0

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * The macros are prefixed with 'JTAG_UART_'.
 * The prefix is the slave descriptor.
 */
#define JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define JTAG_UART_COMPONENT_NAME jtag_uart
#define JTAG_UART_BASE 0x40
#define JTAG_UART_SPAN 16
#define JTAG_UART_END 0x4f
#define JTAG_UART_IRQ 2
#define JTAG_UART_READ_DEPTH 64
#define JTAG_UART_READ_THRESHOLD 8
#define JTAG_UART_WRITE_DEPTH 64
#define JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'div_freq', class 'altera_avalon_pio'
 * The macros are prefixed with 'DIV_FREQ_'.
 * The prefix is the slave descriptor.
 */
#define DIV_FREQ_COMPONENT_TYPE altera_avalon_pio
#define DIV_FREQ_COMPONENT_NAME div_freq
#define DIV_FREQ_BASE 0x50
#define DIV_FREQ_SPAN 32
#define DIV_FREQ_END 0x6f
#define DIV_FREQ_BIT_CLEARING_EDGE_REGISTER 0
#define DIV_FREQ_BIT_MODIFYING_OUTPUT_REGISTER 0
#define DIV_FREQ_CAPTURE 0
#define DIV_FREQ_DATA_WIDTH 32
#define DIV_FREQ_DO_TEST_BENCH_WIRING 0
#define DIV_FREQ_DRIVEN_SIM_VALUE 0
#define DIV_FREQ_EDGE_TYPE NONE
#define DIV_FREQ_FREQ 50000000
#define DIV_FREQ_HAS_IN 0
#define DIV_FREQ_HAS_OUT 1
#define DIV_FREQ_HAS_TRI 0
#define DIV_FREQ_IRQ_TYPE NONE
#define DIV_FREQ_RESET_VALUE 0

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'ONCHIP_MEMORY2_0_'.
 * The prefix is the slave descriptor.
 */
#define ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define ONCHIP_MEMORY2_0_BASE 0x1000000
#define ONCHIP_MEMORY2_0_SPAN 65536
#define ONCHIP_MEMORY2_0_END 0x100ffff
#define ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define ONCHIP_MEMORY2_0_DUAL_PORT 0
#define ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define ONCHIP_MEMORY2_0_SIZE_VALUE 65536
#define ONCHIP_MEMORY2_0_WRITABLE 1
#define ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0


#endif /* _ALTERA_HPSS_H_ */
